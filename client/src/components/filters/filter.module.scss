@import '../../styles/mixins';

.filter {
	background-color: #fff;
	border-right: toRem(1) solid #bebcbd;
	position: relative;
	z-index: 10;
	@include adaptiveValue('width', 295, 240, 2, $containerWidth, 767.98);

	@media (max-width: $mobile) {
		position: fixed;
		top: toRem(85.05);
		left: -100%;
		width: auto;

		max-height: 100%;
		overflow-y: scroll;
		max-width: toRem(295);
		transition: left 0.2s;
		@include adaptiveValue('top', 85.05, 65, 1, 767.98, 320);

		@media (max-width: toEm(540.98)) {
			height: calc(100% - toRem(130));
		}

		&.open {
			left: 0;

			body:has(&.open) {
				overflow: hidden;
				touch-action: none;
				overscroll-behavior: none;
				position: relative;

				&::after {
					content: '';
					position: absolute;
					width: 100%;
					height: 100%;
					top: 0%;
					left: 0%;
					pointer-events: none;
					background: rgba(0, 0, 0, 0.3);
					backdrop-filter: blur(toRem(6));
				}
			}
		}
	}
}

.header {
	border-bottom: toRem(1) solid #bebcbd;
	padding: toRem(20) toRem(15);
	gap: toRem(15);
	display: flex;
	width: 100%;
	align-items: center;
	justify-content: space-between;
	position: relative;
	@include adaptiveValue('padding-left', 30, 0, 2, $containerWidth, 767.98);
	@include adaptiveValue('padding-right', 30, 15, 0, $containerWidth, 767.98);
	@include adaptiveValue('padding-top', 20, 10, 0, $containerWidth, 767.98);
	@include adaptiveValue('padding-bottom', 20, 10, 0, $containerWidth, 767.98);
}

.filterTitle {
	font-size: toRem(22);
	font-weight: 600;
}
.filterBody {
	position: relative;
}
.filterButton {
	padding: toRem(4);
	display: flex;
	justify-content: center;
	align-items: center;
}
